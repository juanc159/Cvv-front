const A=/#/g,C=/&/g,P=/\//g,g=/=/g,i=/\+/g,d=/%5e/gi,L=/%60/gi,O=/%7c/gi,Q=/%20/gi;function b(t){return encodeURI(""+t).replace(O,"|")}function h(t){return b(typeof t=="string"?t:JSON.stringify(t)).replace(i,"%2B").replace(Q,"+").replace(A,"%23").replace(C,"%26").replace(L,"`").replace(d,"^").replace(P,"%2F")}function s(t){return h(t).replace(g,"%3D")}function R(t=""){try{return decodeURIComponent(""+t)}catch{return""+t}}function T(t){return R(t.replace(i," "))}function w(t){return R(t.replace(i," "))}function I(t=""){const e={};t[0]==="?"&&(t=t.slice(1));for(const o of t.split("&")){const r=o.match(/([^=]+)=?(.*)/)||[];if(r.length<2)continue;const c=T(r[1]);if(c==="__proto__"||c==="constructor")continue;const n=w(r[2]||"");e[c]===void 0?e[c]=n:Array.isArray(e[c])?e[c].push(n):e[c]=[e[c],n]}return e}function N(t,e){return(typeof e=="number"||typeof e=="boolean")&&(e=String(e)),e?Array.isArray(e)?e.map(o=>`${s(t)}=${h(o)}`).join("&"):`${s(t)}=${h(e)}`:s(t)}function U(t){return Object.keys(t).filter(e=>t[e]!==void 0).map(e=>N(e,t[e])).filter(Boolean).join("&")}const j=/^[\s\w\0+.-]{2,}:([/\\]{1,2})/,S=/^[\s\w\0+.-]{2,}:([/\\]{2})?/,K=/^([/\\]\s*){2,}[^/\\]/;function $(t,e={}){return typeof e=="boolean"&&(e={acceptRelative:e}),e.strict?j.test(t):S.test(t)||(e.acceptRelative?K.test(t):!1)}function G(t,e){const o=v(t),r={...I(o.search),...e};return o.search=U(r),B(o)}const E=Symbol.for("ufo:protocolRelative");function v(t="",e){const o=t.match(/^[\s\0]*(blob:|data:|javascript:|vbscript:)(.*)/i);if(o){const[,u,l=""]=o;return{protocol:u.toLowerCase(),pathname:l,href:u+l,auth:"",host:"",search:"",hash:""}}if(!$(t,{acceptRelative:!0}))return p(t);const[,r="",c,n=""]=t.replace(/\\/g,"/").match(/^[\s\0]*([\w+.-]{2,}:)?\/\/([^/@]+@)?(.*)/)||[];let[,f="",a=""]=n.match(/([^#/?]*)(.*)?/)||[];r==="file:"&&(a=a.replace(/\/(?=[A-Za-z]:)/,""));const{pathname:_,search:y,hash:m}=p(a);return{protocol:r.toLowerCase(),auth:c?c.slice(0,Math.max(0,c.length-1)):"",host:f,pathname:_,search:y,hash:m,[E]:!r}}function p(t=""){const[e="",o="",r=""]=(t.match(/([^#?]*)(\?[^#]*)?(#.*)?/)||[]).splice(1);return{pathname:e,search:o,hash:r}}function B(t){const e=t.pathname||"",o=t.search?(t.search.startsWith("?")?"":"?")+t.search:"",r=t.hash||"",c=t.auth?t.auth+"@":"",n=t.host||"";return(t.protocol||t[E]?(t.protocol||"")+"//":"")+c+n+e+o+r}export{U as s,G as w};
